{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PropertyService = /*#__PURE__*/(() => {\n  class PropertyService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = `${environment.apiUrl}/api`;\n    }\n    list(query) {\n      let params = new HttpParams();\n      Object.keys(query || {}).forEach(k => {\n        const v = query[k];\n        if (v !== undefined && v !== null && v !== '') params = params.set(k, v);\n      });\n      return this.http.get(`${environment.apiBaseUrl}/properties`, {\n        params\n      });\n    }\n    getById(id) {\n      return this.http.get(`${environment.apiBaseUrl}/properties/${id}`);\n    }\n    getFiltered(listingType, search) {\n      const params = {};\n      if (listingType) params.listingType = listingType;\n      if (search) params.search = search;\n      const query = new URLSearchParams(params).toString();\n      return this.http.get(`${this.baseUrl}/properties${query ? '?' + query : ''}`);\n    }\n    static {\n      this.ɵfac = function PropertyService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PropertyService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: PropertyService,\n        factory: PropertyService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return PropertyService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}